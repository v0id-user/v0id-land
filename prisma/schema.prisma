// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  email            String   @unique
  name             String
  password         String
  RegisterGPGKeyId String
  posts            Post[]
  GPGKey           GPGKey[]

  /*
   Beautiful moment of over engineering a small project ;P
  */
  @@index([email])
}

model GPGKey {
  id         String   @id @default(cuid())
  privateKey String?
  publicKey  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  authorId   String
  author     User     @relation(fields: [authorId], references: [id])
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  posts       Post[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([name])
}

enum PostStatus {
  DRAFT
  PUBLISHED
  UNPUBLISHED
}

model Post {
  id   String  @id @default(cuid())
  slug String? @unique

  title     String?
  content   String?
  createdAt DateTime @default(now())

  updatedAt DateTime?  @updatedAt
  status    PostStatus @default(DRAFT)

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  signedWithGPG Boolean @default(false)
  signature     String?

  workbar    Boolean    @default(false)
  categories Category[]

  @@index([slug])
}
